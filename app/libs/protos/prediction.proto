syntax = "proto3";
package job_seek.prediction;
import "job-search.proto";
import "user-management.proto";
option go_package = "job-seek/pkg/protos";

message JobMatchScore{
  string user_id = 1;
  string job_id = 2;
  float predict_score = 3;
  
  // should be inside the job details
  repeated job_seek.user_management.PreferenceKeyword hitted_keywords = 4;
  optional job_seek.job_search.Job job = 5;
  optional job_seek.user_management.UserProfile user_profile = 6;
}


message SurveyUserPerfenceRequest {
  string user_id = 1;
  string survey_id = 2;
  repeated job_seek.user_management.PreferenceKeyword keywords = 3;
}

message SurveyJobPerfenceRequest{
  string user_id = 1;
  string survey_id = 2;
  repeated JobMatchScore job_score = 3;
}

message ExtractKeywords{
  string user_id = 1;
  string session_id = 2;
  optional job_seek.user_management.UserProfile user_profile = 3;
  optional job_seek.job_search.Job job = 4;
}

message GenerateCoverLetterRequest{
  string user_id = 1;
  string job_id = 2;
  string session_id = 3;
  optional job_seek.user_management.UserProfile user_profile = 4;
  optional job_seek.job_search.Job job = 5;
}

message GenerateCoverLetterResponse{
  string user_id = 1;
  string job_id = 2;
  string session_id = 3;
  string content = 4;
}

message GetSurveyJobRequest{
  string user_id = 1;
  string survey_id = 2;
}

message SurveyJobSet{
  string job_id = 1;
  float user_preference_score = 2;
  SurveyJobFeature features = 3;
}

message SurveyJobFeature{
  float adjusted_job_title_similarity = 1;
  float adjusted_job_industry_similarity = 2;
  float adjusted_company_size = 3;
  float adjusted_job_sector = 4;
  float adjusted_company_culture = 5;
  float adjusted_work_model = 6;
  float adjusted_salary_expectation = 7;
  float adjusted_role_type = 8;
  float adjusted_distance_score = 9;
  float pay_average_norm = 10;
  float descriptions_similarity_to_resume = 11;
}

message SurveyJobQuestionSet {
  string pair_id = 1;
  SurveyJobSet job_a = 2;
  SurveyJobSet job_b = 3;
  repeated string similarities = 4;
  repeated string differences = 5;
  optional float overall_similarity = 6;
}

message GetSurveyJobResponse{
  string user_id = 1;
  string survey_id = 2;
  repeated job_seek.job_search.Job jobs = 3;
  repeated SurveyJobQuestionSet survey_job_questions = 4;
}

service PredictionService {
  // rpc SurveyUserPersona() returns (UserResponse);
  rpc SurveyUserPerfence(SurveyUserPerfenceRequest) returns (job_seek.user_management.UserResponse);
  rpc GetSurveyJob(GetSurveyJobRequest) returns (GetSurveyJobResponse);
  rpc SurveyJobPerfence(SurveyJobPerfenceRequest) returns (job_seek.user_management.UserResponse);
  rpc PredictJobMatchScore(JobMatchScore) returns (JobMatchScore);
  
  rpc ExtractJobKeywords(ExtractKeywords) returns (ExtractKeywords);
  rpc ExtractUserProfileKeywords(ExtractKeywords) returns (ExtractKeywords);
  
  rpc GenerateCoverLetter(GenerateCoverLetterRequest) returns (GenerateCoverLetterResponse);
  rpc GenerateCV(GenerateCoverLetterRequest) returns (GenerateCoverLetterResponse);
}