# -*- coding: utf-8 -*-
# Generated by https://github.com/verloop/twirpy/protoc-gen-twirpy.  DO NOT EDIT!
# source: job-search.proto

from google.protobuf import symbol_database as _symbol_database

from twirp.base import Endpoint
from twirp.server import TwirpServer
from twirp.client import TwirpClient
try:
	from twirp.async_client import AsyncTwirpClient
	_async_available = True
except ModuleNotFoundError:
	_async_available = False

_sym_db = _symbol_database.Default()

class JobSearchServiceServer(TwirpServer):

	def __init__(self, *args, service, server_path_prefix="/twirp"):
		super().__init__(service=service)
		self._prefix = F"{server_path_prefix}/job_seek.job_search.JobSearchService"
		self._endpoints = {
			"JobSearch": Endpoint(
				service_name="JobSearchService",
				name="JobSearch",
				function=getattr(service, "JobSearch"),
				input=_sym_db.GetSymbol("job_seek.job_search.JobSearchRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			),
			"UserJobSearch": Endpoint(
				service_name="JobSearchService",
				name="UserJobSearch",
				function=getattr(service, "UserJobSearch"),
				input=_sym_db.GetSymbol("job_seek.job_search.JobSearchRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			),
			"GetJobByPostId": Endpoint(
				service_name="JobSearchService",
				name="GetJobByPostId",
				function=getattr(service, "GetJobByPostId"),
				input=_sym_db.GetSymbol("job_seek.job_search.JobSearchRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			),
			"GetJobByCompanyId": Endpoint(
				service_name="JobSearchService",
				name="GetJobByCompanyId",
				function=getattr(service, "GetJobByCompanyId"),
				input=_sym_db.GetSymbol("job_seek.job_search.JobSearchRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			),
			"ListCompanyDetail": Endpoint(
				service_name="JobSearchService",
				name="ListCompanyDetail",
				function=getattr(service, "ListCompanyDetail"),
				input=_sym_db.GetSymbol("job_seek.job_search.CompanyDetailRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.CompanyDetailResponse"),
			),
			"GetCompanyDetail": Endpoint(
				service_name="JobSearchService",
				name="GetCompanyDetail",
				function=getattr(service, "GetCompanyDetail"),
				input=_sym_db.GetSymbol("job_seek.job_search.CompanyDetailRequest"),
				output=_sym_db.GetSymbol("job_seek.job_search.CompanyDetail"),
			),
		}

class JobSearchServiceClient(TwirpClient):

	def JobSearch(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/JobSearch",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			**kwargs,
		)

	def UserJobSearch(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/UserJobSearch",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			**kwargs,
		)

	def GetJobByPostId(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetJobByPostId",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			**kwargs,
		)

	def GetJobByCompanyId(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetJobByCompanyId",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
			**kwargs,
		)

	def ListCompanyDetail(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/ListCompanyDetail",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.CompanyDetailResponse"),
			**kwargs,
		)

	def GetCompanyDetail(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetCompanyDetail",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("job_seek.job_search.CompanyDetail"),
			**kwargs,
		)


if _async_available:
	class AsyncJobSearchServiceClient(AsyncTwirpClient):

		async def JobSearch(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/JobSearch",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
				session=session,
				**kwargs,
			)

		async def UserJobSearch(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/UserJobSearch",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
				session=session,
				**kwargs,
			)

		async def GetJobByPostId(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetJobByPostId",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
				session=session,
				**kwargs,
			)

		async def GetJobByCompanyId(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetJobByCompanyId",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.JobSearchResponse"),
				session=session,
				**kwargs,
			)

		async def ListCompanyDetail(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/ListCompanyDetail",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.CompanyDetailResponse"),
				session=session,
				**kwargs,
			)

		async def GetCompanyDetail(self, *, ctx, request, server_path_prefix="/twirp", session=None, **kwargs):
			return await self._make_request(
				url=F"{server_path_prefix}/job_seek.job_search.JobSearchService/GetCompanyDetail",
				ctx=ctx,
				request=request,
				response_obj=_sym_db.GetSymbol("job_seek.job_search.CompanyDetail"),
				session=session,
				**kwargs,
			)
